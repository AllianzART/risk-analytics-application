<project name="RiskAnalyticsApplication" default="cruise">
    <property environment="env" />
    <property name="GRAILS_HOME" value="${env.GRAILS_HOME}" />

    <property file="application.properties" />
    <property file="${user.home}/cert.properties" />
    <!-- plugin.dir must match entry 'grails.project.plugins.dir' in BuildConfig.groovy -->
    <property name="plugin.dir" value="${basedir}/../local-plugins/${app.name}-master" />
    <property name="resources.prod.dir" value="src/java" />
    <property name="webapp.lib.dir" value="web-app/lib" />

    <property name="GRAILS_JVM_OPTS" value="-Xmx2g -XX:MaxPermSize=512m -Duser.language='en'" />

    <get src="https://raw.githubusercontent.com/AllianzART/risk-analytics-core/master/scripts/build.xml" dest="_build.xml" skipexisting="true" ignoreerrors="true"/>

    <copy tofile="_build.xml" overwrite="false" failonerror="false">
        <fileset dir=".." includes="local-plugins/${app.name}-master/risk-analytics-core*/scripts/build.xml" />
    </copy>
    <import file="_build.xml" />

    <target name="clean" depends="init" description="--> Cleans a Grails application">
        <exec executable="${grails}" failonerror="true" resolveexecutable="true">
            <arg value="clean" />
            <arg value="--non-interactive" />
            <env key="GRAILS_HOME" value="${GRAILS_HOME}" />
            <env key="JAVA_OPTS" value="${GRAILS_JVM_OPTS}" />
        </exec>
        <delete verbose="true">
            <fileset dir="." includes="*Db.script" />
            <fileset dir="." includes="**Db.properties" />
            <fileset dir="." includes="*.tsl" />
            <fileset dir="." includes="*.log" />
        </delete>
    </target>



    <target name="standalone-output" depends="init" description="--> Run a Grails applications unit tests">
        <exec executable="${grails}" failonerror="true" resolveexecutable="true">
            <arg
                value="jar -destination=out/production/RiskAnalyticsApplication -mainClass=org.pillarone.riskanalytics.application.Main" />
            <arg value="-buildJar" />
            <arg value="-buildClasses" />
            <env key="GRAILS_HOME" value="${GRAILS_HOME}" />
            <env key="JAVA_OPTS" value="${GRAILS_JVM_OPTS}" />
        </exec>
    </target>

    <target name="-trusted-cert-available">
        <!-- try to use a trusted certificate reading cert.properties from the user.home directory -->
        <available property="file.exists" file="${user.home}/cert.properties" />
    </target>

    <target name="-self-signed-cert" unless="-trusted-cert-available">
        <!-- if no trusted certificate has been found use the self signed certificate available in the project root -->
        <!-- <echo  message="No trusted certificate found. user.home is ${user.home}."/> -->
        <property name="signjar.alias" value="pillarone" />
        <property name="signjar.keystore" value="pillarone.keystore" />
        <property name="signjar.storepass" value="nopasswd" />
        <property name="signjar.keypass" value="nopasswd" />
        <property name="signjar.keystoretype" value="JKS" />
        <!--<property name="signjar.keystoretype" value="PKCS12" />-->
    </target>

    <target name="jar-client" depends="-self-signed-cert" description="--> Create clientside jar files">
        <taskdef resource="net/sf/antcontrib/antcontrib.properties">
            <classpath location="./lib-build/ant-contrib-1.0b3.jar" />
        </taskdef>
        <echo message="${signjar.keystore}" />
        <mkdir dir="${webapp.lib.dir}" />
        <delete dir="${webapp.lib.dir}">
            <include name="${app.name}*.jar" />
        </delete>


        <jar jarfile="${webapp.lib.dir}/${app.name}-extensions-client.jar">
            <fileset dir="${plugin.classes.prod.dir}" includes="com/canoo/ulc/**/client/**" />
            <fileset dir="${plugin.classes.prod.dir}" includes="org/pillarone/ulc/client/**" />
            <!-- Currently the version here must be manually kept in sync with the version of the following line from BuildConfig.groovy :-
                     runtime("org.pillarone:pillar-one-ulc-extensions:1.9") { transitive = false }
                 Dunno why it can't pull the version here from BuildConfig ?!
            -->
            <fileset dir="${plugin.dir}/pillar-one-ulc-extensions-1.10/src/java" includes="**/close-*.png" />
        </jar>

        <jar jarfile="${webapp.lib.dir}/${app.name}-client.jar">
            <fileset dir="${classes.prod.dir}" includes="org/pillarone/riskanalytics/application/client/**" />
            <fileset dir="${classes.prod.dir}"
                includes="org/pillarone/riskanalytics/application/environment/shared/**" />
            <fileset dir="${resources.prod.dir}" includes="*.png" />
        </jar>

        <jar jarfile="${webapp.lib.dir}/${app.name}-jnlp-client.jar">
            <fileset dir="${classes.prod.dir}" includes="org/pillarone/riskanalytics/application/environment/jnlp/**" />
        </jar>

        <jar jarfile="${webapp.lib.dir}/${app.name}-applet-client.jar">
            <fileset dir="${classes.prod.dir}"
                includes="org/pillarone/riskanalytics/application/environment/applet/**" />
        </jar>

        <foreach param="jarFile" target="updateManifestForClientJars">
           <path>
               <fileset dir="${webapp.lib.dir}">
                   <include name="*.jar" />
               </fileset>
           </path>
        </foreach>
        <!-- has to be replaced with a trusted certificate issued for the builder of the jar files -->
        <!-- this is a self signed certificate and won't work with a strict security policy -->
        <signjar alias="${signjar.alias}"  storetype="${signjar.keystoretype}" keystore="${signjar.keystore}" storepass="${signjar.storepass}"
            keypass="${signjar.keypass}" lazy="false" tsaurl="http://tsa.starfieldtech.com/">
            <fileset dir="${webapp.lib.dir}" includes="*.jar" />
            <sysproperty key="http.proxyHost" value="${signjar.proxyHost}"/>
            <sysproperty key="http.proxyPort" value="${signjar.proxyPort}"/>
        </signjar>
    </target>

    <target name="updateManifestForClientJars" >
        <jar update="true" file="${jarFile}">
            <manifest>
                <attribute name="Codebase" value="*" />
                <attribute name="Permissions" value="all-permissions" />
                <attribute name="Application-Name" value="AllianzART" />
            </manifest>
        </jar>
    </target>
    
    <target name="_beforeReleasePlugin" depends="jar-client" />

    <target name="doc" depends="javadoc">
        <Groovydoc destdir="${doc.dir}/gapi" sourcepath="src/groovy" packagenames="**.*" use="true"
            windowtitle="RiskAnalyticsApplication v${version}" private="false">

            <link packages="com.ulcjava." href="http://canoo.com/ulc/developerzone/apidoc/extension" />
            <link packages="java.,org.xml.,javax.,org.xml." href="http://java.sun.com/j2se/1.5.0/docs/api" />
            <link packages="org.apache.ant.,org.apache.tools.ant." href="http://www.dpml.net/api/ant/1.7.0" />
            <link packages="groovy.,org.codehaus.groovy." href="http://groovy.codehaus.org/api/" />
        </Groovydoc>
    </target>

    <target name="javadoc" depends="init">

        <taskdef name="Groovydoc" classname="org.codehaus.groovy.ant.Groovydoc">
            <classpath>
                <fileset dir="${GRAILS_HOME}/lib/" includes="*.jar" />
                <fileset dir="lib/" includes="*.jar" />
            </classpath>
        </taskdef>
        <mkdir dir="${doc.dir}" />
        <Groovydoc destdir="${doc.dir}/api" sourcepath="src/java" packagenames="**.*" use="true"
            windowtitle="RiskAnalyticsApplication v${version}" private="false">
            <link packages="com.ulcjava." href="http://canoo.com/ulc/developerzone/apidoc/extension" />
            <link packages="java.,org.xml.,javax.,org.xml." href="http://java.sun.com/j2se/1.5.0/docs/api" />
            <link packages="org.apache.ant.,org.apache.tools.ant." href="http://www.dpml.net/api/ant/1.7.0" />
            <link packages="groovy.,org.codehaus.groovy." href="http://groovy.codehaus.org/api/" />
        </Groovydoc>

    </target>


</project>
